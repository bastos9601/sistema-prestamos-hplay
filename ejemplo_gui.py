#!/usr/bin/env python3
"""
Ejemplo de Uso del Sistema de Pr√©stamos - Interfaz Gr√°fica
==========================================================

Este script demuestra las funcionalidades principales del sistema
creando clientes, pr√©stamos y pagos de ejemplo, y luego abre
la interfaz gr√°fica para que puedas explorar los datos.
"""

from decimal import Decimal
from datetime import date
from database import Database
from services import ClienteService, PrestamoService, PagoService, ReporteService
import tkinter as tk
from tkinter import messagebox

def crear_datos_ejemplo():
    """Crea datos de ejemplo para demostrar el sistema"""
    print("üöÄ CREANDO DATOS DE EJEMPLO PARA EL SISTEMA...")
    
    # Inicializar servicios
    db = Database()
    cliente_service = ClienteService(db)
    prestamo_service = PrestamoService(db)
    pago_service = PagoService(db)
    
    try:
        # 1. CREAR CLIENTES DE EJEMPLO
        print("\nüë• Creando clientes de ejemplo...")
        
        cliente1 = cliente_service.crear_cliente(
            nombre="Juan Carlos",
            apellido="P√©rez Gonz√°lez",
            dni="12345678",
            telefono="555-0101",
            email="juan.perez@email.com"
        )
        print(f"‚úì Cliente creado: {cliente1}")
        
        cliente2 = cliente_service.crear_cliente(
            nombre="Mar√≠a Elena",
            apellido="Rodr√≠guez L√≥pez",
            dni="87654321",
            telefono="555-0202",
            email="maria.rodriguez@email.com"
        )
        print(f"‚úì Cliente creado: {cliente2}")
        
        cliente3 = cliente_service.crear_cliente(
            nombre="Carlos Alberto",
            apellido="Garc√≠a Mart√≠nez",
            dni="11223344",
            telefono="555-0303",
            email="carlos.garcia@email.com"
        )
        print(f"‚úì Cliente creado: {cliente3}")
        
        # 2. CREAR PR√âSTAMOS DE EJEMPLO
        print("\nüí∞ Creando pr√©stamos de ejemplo...")
        
        # Pr√©stamo 1: Inter√©s simple
        prestamo1 = prestamo_service.crear_prestamo(
            cliente_id=cliente1.id,
            monto=Decimal("15000"),
            tasa_interes=Decimal("12.5"),
            plazo_meses=24,
            tipo_interes="simple"
        )
        print(f"‚úì Pr√©stamo 1 creado: ${prestamo1.monto:.2f} - {prestamo1.tipo_interes}")
        
        # Pr√©stamo 2: Inter√©s compuesto
        prestamo2 = prestamo_service.crear_prestamo(
            cliente_id=cliente2.id,
            monto=Decimal("25000"),
            tasa_interes=Decimal("15.0"),
            plazo_meses=36,
            tipo_interes="compuesto"
        )
        print(f"‚úì Pr√©stamo 2 creado: ${prestamo2.monto:.2f} - {prestamo2.tipo_interes}")
        
        # Pr√©stamo 3: Inter√©s simple
        prestamo3 = prestamo_service.crear_prestamo(
            cliente_id=cliente3.id,
            monto=Decimal("8000"),
            tasa_interes=Decimal("10.0"),
            plazo_meses=12,
            tipo_interes="simple"
        )
        print(f"‚úì Pr√©stamo 3 creado: ${prestamo3.monto:.2f} - {prestamo3.tipo_interes}")
        
        # 3. REGISTRAR PAGOS DE EJEMPLO
        print("\nüí≥ Registrando pagos de ejemplo...")
        
        # Pagos para el pr√©stamo 1
        pago1_1 = pago_service.registrar_pago(
            prestamo_id=prestamo1.id,
            monto=prestamo1.calcular_cuota_mensual(),
            concepto="Primera cuota mensual"
        )
        print(f"‚úì Pago 1 registrado: ${pago1_1.monto:.2f}")
        
        pago1_2 = pago_service.registrar_pago(
            prestamo_id=prestamo1.id,
            monto=prestamo1.calcular_cuota_mensual(),
            concepto="Segunda cuota mensual"
        )
        print(f"‚úì Pago 2 registrado: ${pago1_2.monto:.2f}")
        
        # Pago para el pr√©stamo 2
        pago2_1 = pago_service.registrar_pago(
            prestamo_id=prestamo2.id,
            monto=prestamo2.calcular_cuota_mensual(),
            concepto="Primera cuota mensual"
        )
        print(f"‚úì Pago 3 registrado: ${pago2_1.monto:.2f}")
        
        # Pago para el pr√©stamo 3
        pago3_1 = pago_service.registrar_pago(
            prestamo_id=prestamo3.id,
            monto=Decimal("1000"),
            concepto="Pago parcial"
        )
        print(f"‚úì Pago 4 registrado: ${pago3_1.monto:.2f}")
        
        print("\nüéâ ¬°DATOS DE EJEMPLO CREADOS EXITOSAMENTE!")
        print("=" * 60)
        print("El sistema ahora tiene:")
        print("‚Ä¢ 3 clientes registrados")
        print("‚Ä¢ 3 pr√©stamos activos")
        print("‚Ä¢ 4 pagos registrados")
        print("\nAhora se abrir√° la interfaz gr√°fica para que puedas explorar los datos.")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå Error durante la creaci√≥n de datos de ejemplo: {e}")
        import traceback
        traceback.print_exc()
        return False

def mostrar_mensaje_bienvenida():
    """Muestra un mensaje de bienvenida en la interfaz gr√°fica"""
    root = tk.Tk()
    root.withdraw()  # Ocultar ventana principal
    
    messagebox.showinfo(
        "¬°Bienvenido al Sistema de Pr√©stamos! üéâ",
        "Se han creado datos de ejemplo para que puedas explorar el sistema:\n\n"
        "üë• 3 Clientes registrados\n"
        "üí∞ 3 Pr√©stamos activos\n"
        "üí≥ 4 Pagos registrados\n\n"
        "Usa la interfaz gr√°fica para:\n"
        "‚Ä¢ Gestionar clientes\n"
        "‚Ä¢ Crear y consultar pr√©stamos\n"
        "‚Ä¢ Registrar pagos\n"
        "‚Ä¢ Generar reportes\n\n"
        "¬°Disfruta explorando el sistema!"
    )
    
    root.destroy()

def main():
    """Funci√≥n principal"""
    print("üè¶ SISTEMA DE PR√âSTAMOS DE DINERO - INTERFAZ GR√ÅFICA")
    print("=" * 60)
    
    # Crear datos de ejemplo
    if crear_datos_ejemplo():
        # Mostrar mensaje de bienvenida
        mostrar_mensaje_bienvenida()
        
        # Abrir la interfaz gr√°fica
        print("\nüñ•Ô∏è Abriendo interfaz gr√°fica...")
        try:
            from main_gui import SistemaPrestamosGUI
            app = SistemaPrestamosGUI()
            app.ejecutar()
        except ImportError as e:
            print(f"‚ùå Error al importar la interfaz gr√°fica: {e}")
            print("Aseg√∫rate de que todos los archivos est√©n en el mismo directorio.")
        except Exception as e:
            print(f"‚ùå Error al ejecutar la interfaz gr√°fica: {e}")
    else:
        print("\n‚ùå No se pudieron crear los datos de ejemplo.")
        print("Verifica que el sistema est√© funcionando correctamente.")

if __name__ == "__main__":
    main()
